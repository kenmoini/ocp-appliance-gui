---
- name: Ensure the versioned OpenShift binary directory exists
  ansible.builtin.file:
    state: directory
    path: "{{ openshift_binary_path }}/{{ ocp_version }}"
    mode: '0755'

- name: Check for the version 
  ansible.builtin.stat:
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/openshift-install"
  register: binary_check

- name: Check for the version of the oc cli
  ansible.builtin.stat:
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc"
  register: oc_binary_check

- name: Check for the version of the oc-mirror cli
  ansible.builtin.stat:
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc-mirror"
  register: oc_mirror_check

- name: Download OpenShift Binary if it is missing
  when: not binary_check.stat.exists
  block:
    - name: Download OpenShift Installer binary
      ansible.builtin.get_url:
        url: "{{ openshift_binary_remote_url }}/{{ ocp_version }}/{{ openshift_binary_filename }}"
        dest: "{{ openshift_binary_path }}/{{ ocp_version }}/openshift-install.tar.gz"
        mode: '0755'

    - name: Extract OpenShift Installer binary
      ansible.builtin.unarchive:
        src: "{{ openshift_binary_path }}/{{ ocp_version }}/openshift-install.tar.gz"
        dest: "{{ openshift_binary_path }}/{{ ocp_version }}"
        remote_src: yes

    - name: Remove the downloaded tar file
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/openshift-install.tar.gz"
        state: absent

    - name: Rename binary
      shell: "mv {{ openshift_binary_path }}/{{ ocp_version }}/openshift-install-fips {{ openshift_binary_path }}/{{ ocp_version }}/openshift-install"

    - name: Ensure the OpenShift binary is executable
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/openshift-install"
        mode: '0755'

- name: Download OpenShift CLI if it is missing
  when: not oc_binary_check.stat.exists
  block:
    - name: Download OpenShift Installer binary
      ansible.builtin.get_url:
        url: "{{ openshift_binary_remote_url }}/{{ ocp_version }}/{{ openshift_cli_filename }}"
        dest: "{{ openshift_binary_path }}/{{ ocp_version }}/oc.tar.gz"
        mode: '0755'

    - name: Extract OpenShift Installer binary
      ansible.builtin.unarchive:
        src: "{{ openshift_binary_path }}/{{ ocp_version }}/oc.tar.gz"
        dest: "{{ openshift_binary_path }}/{{ ocp_version }}"
        remote_src: yes

    - name: Remove the downloaded tar file
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc.tar.gz"
        state: absent

    - name: Ensure the OpenShift CLI is executable
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc"
        mode: '0755'

    - name: Ensure the kubectl is executable
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/kubectl"
        mode: '0755'

- name: Download oc-mirror if it is missing
  when: not oc_mirror_check.stat.exists
  block:
    - name: Download oc-mirror binary
      ansible.builtin.get_url:
        url: "{{ openshift_binary_remote_url }}/{{ ocp_version }}/{{ oc_mirror_filename }}"
        dest: "{{ openshift_binary_path }}/{{ ocp_version }}/oc-mirror.tar.gz"
        mode: '0755'

    - name: Extract oc-mirror binary
      ansible.builtin.unarchive:
        src: "{{ openshift_binary_path }}/{{ ocp_version }}/oc-mirror.tar.gz"
        dest: "{{ openshift_binary_path }}/{{ ocp_version }}"
        remote_src: yes

    - name: Remove the downloaded tar file
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc-mirror.tar.gz"
        state: absent

    - name: Ensure oc-mirror is executable
      ansible.builtin.file:
        path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc-mirror"
        mode: '0755'

- name: Define the alternatives for openshift-install
  community.general.alternatives:
    name: openshift-install
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/openshift-install"
    link: /usr/local/bin/openshift-install
    state: "{{ 'selected' if default_version == ocp_version else 'present' }}" 

- name: Define the alternatives for oc
  community.general.alternatives:
    name: oc
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc"
    link: /usr/local/bin/oc
    state: "{{ 'selected' if default_version == ocp_version else 'present' }}"

- name: Define the alternatives for kubectl
  community.general.alternatives:
    name: kubectl
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/kubectl"
    link: /usr/local/bin/kubectl
    state: "{{ 'selected' if default_version == ocp_version else 'present' }}"

- name: Define the alternatives for oc-mirror
  community.general.alternatives:
    name: oc-mirror
    path: "{{ openshift_binary_path }}/{{ ocp_version }}/oc-mirror"
    link: /usr/local/bin/oc-mirror
    state: "{{ 'selected' if default_version == ocp_version else 'present' }}"
